{"version":3,"file":"SummaryCell.js","sourceRoot":"","sources":["../src/SummaryCell.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,OAAO,CAAC;AACpC,OAAO,UAAU,MAAM,YAAY,CAAC;AAcpC,SAAS,WAAW,CAAQ,EAKF;QAJxB,kBAAM,EACN,gDAAqB,EACrB,YAAG,EACH,0BAAU;IAEF,IAAA,0CAAkC,EAAE,oBAAK,EAAE,kBAAI,EAAE,0CAAgB,CAAY;IACrF,IAAM,SAAS,GAAG,UAAU,CAC1B,UAAU,EACV;QACE,iBAAiB,EAAE,MAAM,CAAC,MAAM;QAChC,sBAAsB,EAAE,MAAM,CAAC,GAAG,KAAK,qBAAqB;KAC7D,EACD,OAAO,gBAAgB,KAAK,UAAU,CAAC,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAClF,CAAC;IAEF,IAAM,KAAK,GAAwB,EAAE,KAAK,OAAA,EAAE,IAAI,MAAA,EAAE,CAAC;IAEnD,IAAI,UAAU,KAAK,SAAS,EAAE;QAC5B,KAAK,CAAC,SAAS,GAAG,gBAAc,UAAU,QAAK,CAAC;KACjD;IAED,OAAO,CACL,6BAAK,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,IACpC,gBAAgB,IAAI,oBAAC,gBAAgB,IAAC,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,GAAI,CAC/D,CACP,CAAC;AACJ,CAAC;AAED,eAAe,IAAI,CAAC,WAAW,CAA2D,CAAC","sourcesContent":["import React, { memo } from 'react';\nimport classNames from 'classnames';\n\nimport { CellRendererProps } from './common/types';\n\ntype SharedCellRendererProps<R, SR> = Pick<CellRendererProps<R, SR>,\n  | 'lastFrozenColumnIndex'\n  | 'scrollLeft'\n  | 'column'\n>;\n\ninterface SummaryCellProps<R, SR> extends SharedCellRendererProps<R, SR> {\n  row: SR;\n}\n\nfunction SummaryCell<R, SR>({\n  column,\n  lastFrozenColumnIndex,\n  row,\n  scrollLeft\n}: SummaryCellProps<R, SR>) {\n  const { summaryFormatter: SummaryFormatter, width, left, summaryCellClass } = column;\n  const className = classNames(\n    'rdg-cell',\n    {\n      'rdg-cell-frozen': column.frozen,\n      'rdg-cell-frozen-last': column.idx === lastFrozenColumnIndex\n    },\n    typeof summaryCellClass === 'function' ? summaryCellClass(row) : summaryCellClass\n  );\n\n  const style: React.CSSProperties = { width, left };\n\n  if (scrollLeft !== undefined) {\n    style.transform = `translateX(${scrollLeft}px)`;\n  }\n\n  return (\n    <div className={className} style={style}>\n      {SummaryFormatter && <SummaryFormatter column={column} row={row} />}\n    </div>\n  );\n}\n\nexport default memo(SummaryCell) as <R, SR>(props: SummaryCellProps<R, SR>) => JSX.Element;\n"]}