{"version":3,"file":"Cell.js","sourceRoot":"","sources":["../src/Cell.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef, memo, createElement } from 'react';\nimport classNames from 'classnames';\n\nimport { CellRendererProps } from './common/types';\nimport { preventDefault, wrapEvent } from './utils';\n\nfunction Cell<R, SR>({\n  children,\n  className,\n  column,\n  isRowSelected,\n  lastFrozenColumnIndex,\n  row,\n  rowIdx,\n  scrollLeft,\n  eventBus,\n  onRowClick,\n  enableCellRangeSelection,\n  onClick,\n  onDoubleClick,\n  onContextMenu,\n  onDragOver,\n  onMouseDown,\n  onMouseEnter,\n  ...props\n}: CellRendererProps<R, SR>, ref: React.Ref<HTMLDivElement>) {\n  function selectCell(openEditor?: boolean) {\n    eventBus.dispatch('SELECT_CELL', { idx: column.idx, rowIdx }, openEditor);\n  }\n\n  function handleCellClick() {\n    selectCell();\n    onRowClick?.(rowIdx, row, column);\n  }\n\n  function handleCellMouseDown() {\n    eventBus.dispatch('SELECT_START', { idx: column.idx, rowIdx });\n\n    function handleWindowMouseUp() {\n      eventBus.dispatch('SELECT_END');\n      window.removeEventListener('mouseup', handleWindowMouseUp);\n    }\n\n    window.addEventListener('mouseup', handleWindowMouseUp);\n  }\n\n  function handleCellMouseEnter() {\n    eventBus.dispatch('SELECT_UPDATE', { idx: column.idx, rowIdx });\n  }\n\n  function handleCellContextMenu() {\n    selectCell();\n  }\n\n  function handleCellDoubleClick() {\n    selectCell(true);\n  }\n\n  function onRowSelectionChange(checked: boolean, isShiftClick: boolean) {\n    eventBus.dispatch('SELECT_ROW', { rowIdx, checked, isShiftClick });\n  }\n\n  const { cellClass } = column;\n  className = classNames(\n    'rdg-cell',\n    {\n      'rdg-cell-frozen': column.frozen,\n      'rdg-cell-frozen-last': column.idx === lastFrozenColumnIndex\n    },\n    typeof cellClass === 'function' ? cellClass(row) : cellClass,\n    className\n  );\n\n  const style: React.CSSProperties = {\n    width: column.width,\n    left: column.left\n  };\n\n  if (scrollLeft !== undefined) {\n    style.transform = `translateX(${scrollLeft}px)`;\n  }\n\n  // TODO: Check if the children prop is required or not. These are most likely set by custom cell renderer\n  if (!children) {\n    children = createElement(column.formatter, {\n      column,\n      rowIdx,\n      row,\n      isRowSelected,\n      onRowSelectionChange\n    });\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={wrapEvent(handleCellClick, onClick)}\n      onDoubleClick={wrapEvent(handleCellDoubleClick, onDoubleClick)}\n      onContextMenu={wrapEvent(handleCellContextMenu, onContextMenu)}\n      onDragOver={wrapEvent(preventDefault, onDragOver)}\n      onMouseDown={!enableCellRangeSelection ? onMouseDown : wrapEvent(handleCellMouseDown, onMouseDown)}\n      onMouseEnter={!enableCellRangeSelection ? onMouseEnter : wrapEvent(handleCellMouseEnter, onMouseEnter)}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default memo(forwardRef(Cell)) as <R, SR = unknown>(props: CellRendererProps<R, SR>) => JSX.Element;\n"]}